{"version":3,"file":"ShapeBullet.js","sourceRoot":"","sources":["../../../../../src/.internal/plugins/bullets/ShapeBullet.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Functionality for drawing bullets with basic shapes.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { Bullet, IBulletProperties, IBulletAdapters, IBulletEvents } from \"../../charts/elements/Bullet\";\r\nimport { Rectangle } from \"../../core/elements/Rectangle\";\r\nimport { Circle } from \"../../core/elements/Circle\";\r\nimport { Triangle } from \"../../core/elements/Triangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ShapeBullet]].\r\n */\r\nexport interface IShapeBulletProperties extends IBulletProperties {\r\n\r\n\t/**\r\n\t * Size (width and height in pixels) of the bullet. The actual shapes will be\r\n\t * sized and positioned to fit this pixel value.\r\n\t *\r\n\t * @default 10\r\n\t */\r\n\tsize?: number;\r\n\r\n\t/**\r\n\t * Shape of the bullet.\r\n\t */\r\n\tshape?: BulletShapes;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[ShapeBullet]].\r\n */\r\nexport interface IShapeBulletEvents extends IBulletEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ShapeBullet]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IShapeBulletAdapters extends IBulletAdapters, IShapeBulletProperties { }\r\n\r\n/**\r\n * Defines available shapes for a [[ShapeBullet]].\r\n */\r\nexport type BulletShapes = \"square\" | \"diamond\" | \"circle\" | \"up\" | \"down\" | \"left\" | \"right\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw a ShapeBullet shape.\r\n *\r\n * @since 4.9.34\r\n * @see {@link https://www.amcharts.com/docs/v4/tutorials/plugin-bullets/} for usage instructions.\r\n * @see {@link IShapeBulletEvents} for a list of available events\r\n * @see {@link IShapeBulletAdapters} for a list of available Adapters\r\n */\r\nexport class ShapeBullet extends Bullet {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IShapeBulletProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IShapeBulletAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IShapeBulletEvents;\r\n\r\n\t/**\r\n\t * An actual element comprising the shape.\r\n\t *\r\n\t * The type of the element will depend on the `shape` setting. It could be\r\n\t * a `Circle`, `Rectangle`, or `Triangle`.\r\n\t */\r\n\tpublic shapeElement: Sprite;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ShapeBullet\";\r\n\t\tthis.size = 10;\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tif (this.shapeElement) {\r\n\t\t\tthis.shapeElement.dispose();\r\n\t\t}\r\n\r\n\t\tswitch (this.shape) {\r\n\t\t\tcase \"square\":\r\n\t\t\t\tthis.createSquare();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"diamond\":\r\n\t\t\t\tthis.createSquare(45);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"circle\":\r\n\t\t\t\tthis.createCircle();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"up\":\r\n\t\t\t\tthis.createTriangle();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"right\":\r\n\t\t\t\tthis.createTriangle(90);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"down\":\r\n\t\t\t\tthis.createTriangle(180);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"left\":\r\n\t\t\t\tthis.createTriangle(270);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t// todo\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates the shape so it is positioned properly.\r\n\t */\r\n\tprivate processShape(): void {\r\n\t\tthis.shapeElement.horizontalCenter = \"middle\";\r\n\t\tthis.shapeElement.verticalCenter = \"middle\";\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a square shape.\r\n\t */\r\n\tprivate createSquare(rotation: number = 0): void {\r\n\t\tconst element = this.createChild(Rectangle);\r\n\t\telement.width = this.size;\r\n\t\telement.height = this.size;\r\n\t\telement.rotation = rotation;\r\n\t\tthis.shapeElement = element;\r\n\t\tthis.processShape();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a circle shape.\r\n\t */\r\n\tprivate createCircle(rotation: number = 0): void {\r\n\t\tconst element = this.createChild(Circle);\r\n\t\telement.radius = this.size / 2;\r\n\t\tthis.shapeElement = element;\r\n\t\tthis.processShape();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a triangle shape.\r\n\t */\r\n\tprivate createTriangle(rotation: number = 0): void {\r\n\t\tconst element = this.createChild(Triangle);\r\n\t\telement.width = this.size;\r\n\t\telement.height = this.size;\r\n\t\telement.rotation = rotation;\r\n\t\tthis.shapeElement = element;\r\n\t\tthis.processShape();\r\n\t}\r\n\r\n\t/**\r\n\t * Shape of the bullet.\r\n\t *\r\n\t * Available options: `\"square\"`, `\"diamond\"`, `\"circle\"`, `\"up\"`, `\"down\"`,\r\n\t * `\"left\"`, `\"right\"`.\r\n\t *\r\n\t * There is no default. If `shape` is not set, the bullets will come out\r\n\t * empty.\r\n\t *\r\n\t * @param  value  Shape\r\n\t */\r\n\tpublic set shape(value: BulletShapes) {\r\n\t\tif (this.setPropertyValue(\"shape\", value, true)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return shape scope\r\n\t */\r\n\tpublic get shape(): BulletShapes {\r\n\t\treturn this.getPropertyValue(\"shape\");\r\n\t}\r\n\r\n\t/**\r\n\t * Size (width and height in pixels) of the bullet. The actual shapes will be\r\n\t * sized and positioned to fit this pixel value.\r\n\t *\r\n\t * @default 10\r\n\t * @param value  Size (px)\r\n\t */\r\n\tpublic set size(value: number) {\r\n\t\tif (this.setPropertyValue(\"size\", value, true)) {\r\n\t\t\tthis.width = value;\r\n\t\t\tthis.height = value;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Size (px)\r\n\t */\r\n\tpublic get size(): number {\r\n\t\tlet size: number = this.getPropertyValue(\"size\");\r\n\t\tif (!$type.isNumber(size)) {\r\n\t\t\tsize = 0;\r\n\t\t}\r\n\t\treturn size;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ShapeBullet\"] = ShapeBullet;"]}