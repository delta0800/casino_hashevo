"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[857],{31198:(r,t,o)=>{const n=o(64667).v4,e=o(17741),i=function(r,t){if(!(this instanceof i))return new i(r,t);t||(t={}),this.options={reviver:void 0!==t.reviver?t.reviver:null,replacer:void 0!==t.replacer?t.replacer:null,generator:void 0!==t.generator?t.generator:function(){return n()},version:void 0!==t.version?t.version:2,notificationIdNull:"boolean"==typeof t.notificationIdNull&&t.notificationIdNull},this.callServer=r};r.exports=i,i.prototype.request=function(r,t,o,n){const i=this;let s=null;const u=Array.isArray(r)&&"function"==typeof t;if(1===this.options.version&&u)throw new TypeError("JSON-RPC 1.0 does not support batching");if(u||!u&&r&&"object"==typeof r&&"function"==typeof t)n=t,s=r;else{"function"==typeof o&&(n=o,o=void 0);const i="function"==typeof n;try{s=e(r,t,o,{generator:this.options.generator,version:this.options.version,notificationIdNull:this.options.notificationIdNull})}catch(r){if(i)return n(r);throw r}if(!i)return s}let f;try{f=JSON.stringify(s,this.options.replacer)}catch(r){return n(r)}return this.callServer(f,(function(r,t){i._parseResponse(r,t,n)})),s},i.prototype._parseResponse=function(r,t,o){if(r)return void o(r);if(!t)return o();let n;try{n=JSON.parse(t,this.options.reviver)}catch(r){return o(r)}if(3===o.length){if(Array.isArray(n)){const r=function(r){return void 0!==r.error},t=function(t){return!r(t)};return o(null,n.filter(r),n.filter(t))}return o(null,n.error,n.result)}o(null,n)}},17741:(r,t,o)=>{const n=o(64667).v4;r.exports=function(r,t,o,e){if("string"!=typeof r)throw new TypeError(r+" must be a string");const i="number"==typeof(e=e||{}).version?e.version:2;if(1!==i&&2!==i)throw new TypeError(i+" must be 1 or 2");const s={method:r};if(2===i&&(s.jsonrpc="2.0"),t){if("object"!=typeof t&&!Array.isArray(t))throw new TypeError(t+" must be an object, array or omitted");s.params=t}if(void 0===o){const r="function"==typeof e.generator?e.generator:function(){return n()};s.id=r(s,e)}else 2===i&&null===o?e.notificationIdNull&&(s.id=null):s.id=o;return s}},64667:(r,t,o)=>{var n;o.d(t,{v4:()=>p});var e=new Uint8Array(16);function i(){if(!n&&!(n="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return n(e)}const s=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;const u=function(r){return"string"==typeof r&&s.test(r)};for(var f=[],a=0;a<256;++a)f.push((a+256).toString(16).substr(1));const c=function(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,o=(f[r[t+0]]+f[r[t+1]]+f[r[t+2]]+f[r[t+3]]+"-"+f[r[t+4]]+f[r[t+5]]+"-"+f[r[t+6]]+f[r[t+7]]+"-"+f[r[t+8]]+f[r[t+9]]+"-"+f[r[t+10]]+f[r[t+11]]+f[r[t+12]]+f[r[t+13]]+f[r[t+14]]+f[r[t+15]]).toLowerCase();if(!u(o))throw TypeError("Stringified UUID is invalid");return o};const p=function(r,t,o){var n=(r=r||{}).random||(r.rng||i)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,t){o=o||0;for(var e=0;e<16;++e)t[o+e]=n[e];return t}return c(n)}}}]);